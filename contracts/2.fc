{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

int tlen(tuple t) asm "TLEN";

() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  tuple resultMatrix = empty_tuple();
  tuple rowTuple = empty_tuple();
  
  int rA = matrixA.tlen();
  int cA = matrixA.at(0).tlen();
  int rB = matrixB.tlen();
  int cB = matrixB.at(0).tlen();

  int i = 0;
  int j = 0;
  int k = 0;
  int temp = 0;
  while(i < rA){
    rowTuple = empty_tuple();
    j = 0;
    while(j < cB){
      temp = 0;
      k = 0;
      while(k < cA){
        temp = temp + ( matrixA.at(i).at(k) * matrixB.at(k).at(j) );
        k = k + 1;
      }

      rowTuple~tpush(temp);
      j = j + 1;
    }

    resultMatrix~tpush(rowTuple);
    i = i + 1;
  }
  
  return resultMatrix;
}